R.mo = 6e-3;
R.mi = 1e-3;
R.gapm = 0.1e-3;

R.delta = 0.45e-3;
R.Q = 34;
R.xoff = 0;
R.ri = 0.07295-R.delta;
R.ro = 0.01;
R.P = 2;
R.gapr = R.ri+R.delta/2;
R.alpha0 = 0.110875037312303; 
%R.alpha0 = 0.110875037312303+0.113457454619590
alpha_slotm = 2*pi/R.Q;
tau_slotm = R.ri*alpha_slotm

points = [0, 1.5, 0.6; ...
          1, 2.5, 2; ...
          2,  19, 4; ...
           -2,  19, 4; ...
           -2,  23, 4; ...
           -6,  19, 4; ...
           -5, 2.5, 2; ...
           -4, 1.5, 0.6; ...
           -4    0, 0.5];
% inverse operation of cumsum leads to
points = [0, 1.5, 0.6; ...
          1, 1, 3; ...
          1,  16.5, 5; ...
           -4,  0, 5; ...
           0,  4, 5; ...
           -4,  -4, 5; ...
           1, -16.5, 3; ...
           1, -1, 0.6; ...
           0   -1.5, 0.5];
       
 points = [0,    3,     2; ...
            0,    4.5,   2; ...
           -1.5,  4.5,   2;...
            0.25, 24,    3; ...
            1,    24,    2; ...
            1,    24.75, 2; ...
            1.75, 24,    2; ...
            3,    4.5,   2; ...
            1.5,  4.5,   2; ...
            1.5,  3,     2; ...
            1.5,  0,     1];

 points = [0,    3,     2; ...
            0,    1.5,   2; ...
            1.5,  0,   2;...
            -1.75, 19.5,    4; ...
            -0.75,    0,    4; ...
            0,    0.75, 4; ...
            -0.75, -0.75,    4; ...
            -1.25,-19.5,   2; ...
            1.5,  0,   2; ...
            0,  -1.5,     2; ...
            0,  -3,     1];
        
        
       
R.slot_endpoint = 11;

R.slot_points = [points(:, 1:2)*(tau_slotm/13.5), points(:, 3)];
R.slot_lines = [0 1 0; ...
                 1 3 2; ...
                 3 4 0; ...
                 4 6 5; ...
                 6 7 5; ...
                 7 8 0; ...
                 8 10 9; ...
                 10 11 0; ...
                 1 10 0;...
                 0 11 0];
R.inner_lines = [-10];
R.slot_boundary_lines = [1, 2, 3, 4, 5, 6, 7, 8]';
R.slot_loops = {[2, 3, 4, 5, 6, 7, -9], [1, 9, 8, -10]};
R.slot_surfaces = {[1], [2]};

R.midangle = 0.5*0.040276828892177;
%-------------------------------------------------------------------------
I = [2000 2000 2000 2000]; Ip = 1999;
R.Istart = I;
R.Ipstart = Ip;
R.normsign = -1;
R = gmsh_slotgeom(R, 'arkkio_rotor.geo');

slots = [(1:R.Q)' ones(R.Q, 1)];
wedges = [(1:R.Q)' 2*ones(R.Q, 1)];
R.phys_wedges = stator_getphys(R, wedges);
R.phys_slots = stator_getphys(R, slots);
